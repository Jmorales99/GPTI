{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\56976\\\\Desktop\\\\GPTI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AdBanner from './components/ads/AdBanner';\nimport archivoJson from './trabajos.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [recommendations, setRecommendations] = useState([]);\n  const [coverLetter, setCoverLetter] = useState(''); // Almacena la carta de presentación generada\n  const [jobInfo, setJobInfo] = useState({\n    nombre: '',\n    telefono: '',\n    // Añadir teléfono a jobInfo\n    correo: '',\n    // Añadir correo a jobInfo\n    habilidades: ['', '', '', '', ''],\n    experiencia: '',\n    intereses: '',\n    porque: '' // Añadir porque a jobInfo\n  });\n  const opcionesExperiencia = [{\n    value: '0',\n    label: 'Sin experiencia'\n  }, {\n    value: '1',\n    label: '1 año'\n  }, {\n    value: '2',\n    label: '2 años'\n  }, {\n    value: '3',\n    label: '3 años'\n  }, {\n    value: '4',\n    label: 'Más de 3 años'\n  }];\n  useEffect(() => {\n    setCategories(archivoJson.categories);\n  }, []);\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setFilteredJobs(category.jobs);\n  };\n  const handleViewDetails = job => {\n    setSelectedJob(job);\n    setCoverLetter(''); // Limpiar cualquier carta de presentación previa al ver un nuevo trabajo\n  };\n  const handleInputChange = (index, value) => {\n    const updatedSkills = [...jobInfo.habilidades];\n    updatedSkills[index] = value;\n    setJobInfo({\n      ...jobInfo,\n      habilidades: updatedSkills\n    });\n  };\n  const handleSubmit = async () => {\n    var _opcionesExperiencia$;\n    const jobDescriptionText = `\n      Me gustaría postularme al siguiente trabajo:\n      - Título del trabajo: ${selectedJob.title}\n      - Ubicación: ${selectedJob.location}\n      - Descripción del trabajo: ${selectedJob.description}\n      \n      A continuación mis detalles:\n      - Nombre: ${jobInfo.nombre}\n      - Teléfono: ${jobInfo.telefono}\n      - Correo: ${jobInfo.correo}\n      - Habilidades: ${jobInfo.habilidades.filter(skill => skill.trim() !== '').join(', ')}\n      - Experiencia: ${((_opcionesExperiencia$ = opcionesExperiencia.find(opt => opt.value === jobInfo.experiencia)) === null || _opcionesExperiencia$ === void 0 ? void 0 : _opcionesExperiencia$.label) || 'No especificada'}\n      - Intereses: ${jobInfo.intereses || 'No especificados'}\n      - Porque quiero trabajar con ustedes: ${jobInfo.porque || 'No especificado'}\n    `;\n\n    // Enviar el objeto con todas las propiedades necesarias\n    try {\n      const response = await fetch('http://localhost:3000/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jobInfo) // Asegúrate de enviar jobInfo\n      });\n      if (!response.ok) {\n        throw new Error('Error en la respuesta del servidor');\n      }\n      const data = await response.json();\n      const receivedRecommendations = data.recomendaciones.split('\\n').map(item => item.trim());\n      setRecommendations(receivedRecommendations);\n\n      // Almacenar la respuesta como la carta de presentación generada\n      setCoverLetter(data.carta || 'No se generó una carta de presentación');\n    } catch (error) {\n      console.error(\"Error al enviar datos al backend:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedJob ? /*#__PURE__*/_jsxDEV(JobDetails, {\n      job: selectedJob,\n      onBack: () => setSelectedJob(null),\n      jobInfo: jobInfo,\n      onInputChange: handleInputChange,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      opcionesExperiencia: opcionesExperiencia,\n      coverLetter: coverLetter // Pasar la carta de presentación para ser mostrada\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Encuentra tu trabajo ideal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AdBanner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"category-list\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCategoryClick(category),\n          className: \"category-button\",\n          children: category.category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), filteredJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"job-list\",\n        children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobItem, {\n          job: job,\n          onViewDetails: () => handleViewDetails(job)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SV6AUDLZgVNlJGMQe8Ars3znkQc=\");\n_c = App;\nconst JobDetails = ({\n  job,\n  onBack,\n  jobInfo,\n  onInputChange,\n  onChange,\n  onSubmit,\n  opcionesExperiencia,\n  coverLetter\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"job-details\",\n  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onBack,\n    children: \"Volver\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: job.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: job.location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: job.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"search-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nombre\",\n      placeholder: \"Nombre\",\n      className: \"input-field\",\n      value: jobInfo.nombre,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"telefono\",\n      placeholder: \"Tel\\xE9fono\",\n      className: \"input-field\",\n      value: jobInfo.telefono,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"correo\",\n      placeholder: \"Correo Electr\\xF3nico\",\n      className: \"input-field\",\n      value: jobInfo.correo,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), jobInfo.habilidades.map((skill, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: `Habilidad ${index + 1}`,\n      className: \"input-field\",\n      value: skill,\n      onChange: e => onInputChange(index, e.target.value)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"experiencia\",\n      className: \"input-field\",\n      value: jobInfo.experiencia,\n      onChange: onChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Selecciona la experiencia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), opcionesExperiencia.map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: opt.value,\n        children: opt.label\n      }, opt.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"intereses\",\n      placeholder: \"Intereses\",\n      className: \"input-field\",\n      value: jobInfo.intereses,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"porque\",\n      placeholder: \"\\xBFPor qu\\xE9 quieres trabajar con nosotros?\",\n      className: \"input-field\",\n      value: jobInfo.porque,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: onSubmit,\n      children: \"Generar Carta de Presentaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this), coverLetter && /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cover-letter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Carta de Presentaci\\xF3n Generada:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: coverLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 142,\n  columnNumber: 3\n}, this);\n_c2 = JobDetails;\nconst Navbar = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"navbar\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-brand\",\n    children: \"GPTJOB\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 230,\n  columnNumber: 3\n}, this);\n_c3 = Navbar;\nconst JobItem = ({\n  job,\n  onViewDetails\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"job-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: job.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: job.location\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onViewDetails,\n    children: \"Abrir Detalles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 236,\n  columnNumber: 3\n}, this);\n_c4 = JobItem;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"JobDetails\");\n$RefreshReg$(_c3, \"Navbar\");\n$RefreshReg$(_c4, \"JobItem\");","map":{"version":3,"names":["React","useState","useEffect","AdBanner","archivoJson","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","categories","setCategories","selectedCategory","setSelectedCategory","filteredJobs","setFilteredJobs","selectedJob","setSelectedJob","recommendations","setRecommendations","coverLetter","setCoverLetter","jobInfo","setJobInfo","nombre","telefono","correo","habilidades","experiencia","intereses","porque","opcionesExperiencia","value","label","handleCategoryClick","category","jobs","handleViewDetails","job","handleInputChange","index","updatedSkills","handleSubmit","_opcionesExperiencia$","jobDescriptionText","title","location","description","filter","skill","trim","join","find","opt","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","receivedRecommendations","recomendaciones","split","map","item","carta","error","console","className","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","JobDetails","onBack","onInputChange","onChange","handleChange","onSubmit","onClick","length","JobItem","onViewDetails","id","_c","type","name","placeholder","e","target","_c2","_c3","_c4","$RefreshReg$"],"sources":["C:/Users/56976/Desktop/GPTI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport AdBanner from './components/ads/AdBanner';\r\nimport archivoJson from './trabajos.json';\r\n\r\nfunction App() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [recommendations, setRecommendations] = useState([]); \r\n  const [coverLetter, setCoverLetter] = useState('');  // Almacena la carta de presentación generada\r\n  const [jobInfo, setJobInfo] = useState({\r\n    nombre: '',\r\n    telefono: '',  // Añadir teléfono a jobInfo\r\n    correo: '',    // Añadir correo a jobInfo\r\n    habilidades: ['', '', '', '', ''],\r\n    experiencia: '',\r\n    intereses: '',\r\n    porque: ''     // Añadir porque a jobInfo\r\n  });\r\n\r\n  const opcionesExperiencia = [\r\n    { value: '0', label: 'Sin experiencia' },\r\n    { value: '1', label: '1 año' },\r\n    { value: '2', label: '2 años' },\r\n    { value: '3', label: '3 años' },\r\n    { value: '4', label: 'Más de 3 años' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setCategories(archivoJson.categories);\r\n  }, []);\r\n  \r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category);\r\n    setFilteredJobs(category.jobs);\r\n  };\r\n\r\n  const handleViewDetails = (job) => {\r\n    setSelectedJob(job);\r\n    setCoverLetter(''); // Limpiar cualquier carta de presentación previa al ver un nuevo trabajo\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const updatedSkills = [...jobInfo.habilidades];\r\n    updatedSkills[index] = value;\r\n    setJobInfo({ ...jobInfo, habilidades: updatedSkills });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const jobDescriptionText = `\r\n      Me gustaría postularme al siguiente trabajo:\r\n      - Título del trabajo: ${selectedJob.title}\r\n      - Ubicación: ${selectedJob.location}\r\n      - Descripción del trabajo: ${selectedJob.description}\r\n      \r\n      A continuación mis detalles:\r\n      - Nombre: ${jobInfo.nombre}\r\n      - Teléfono: ${jobInfo.telefono}\r\n      - Correo: ${jobInfo.correo}\r\n      - Habilidades: ${jobInfo.habilidades.filter(skill => skill.trim() !== '').join(', ')}\r\n      - Experiencia: ${opcionesExperiencia.find(opt => opt.value === jobInfo.experiencia)?.label || 'No especificada'}\r\n      - Intereses: ${jobInfo.intereses || 'No especificados'}\r\n      - Porque quiero trabajar con ustedes: ${jobInfo.porque || 'No especificado'}\r\n    `;\r\n  \r\n    // Enviar el objeto con todas las propiedades necesarias\r\n    try {\r\n      const response = await fetch('http://localhost:3000/recomendaciones', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(jobInfo), // Asegúrate de enviar jobInfo\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Error en la respuesta del servidor');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      const receivedRecommendations = data.recomendaciones.split('\\n').map(item => item.trim());\r\n      setRecommendations(receivedRecommendations);\r\n\r\n      // Almacenar la respuesta como la carta de presentación generada\r\n      setCoverLetter(data.carta || 'No se generó una carta de presentación');\r\n  \r\n    } catch (error) {\r\n      console.error(\"Error al enviar datos al backend:\", error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"app-container\">\r\n      <Navbar />\r\n\r\n      {selectedJob ? (\r\n        <JobDetails \r\n          job={selectedJob} \r\n          onBack={() => setSelectedJob(null)} \r\n          jobInfo={jobInfo} \r\n          onInputChange={handleInputChange} \r\n          onChange={handleChange} \r\n          onSubmit={handleSubmit}\r\n          opcionesExperiencia={opcionesExperiencia}\r\n          coverLetter={coverLetter}  // Pasar la carta de presentación para ser mostrada\r\n        />\r\n      ) : (\r\n        <>\r\n          <header className=\"app-header\">\r\n            <h1>Encuentra tu trabajo ideal</h1>\r\n          </header>\r\n\r\n          <AdBanner />\r\n\r\n          <section className=\"category-list\">\r\n            {categories.map((category, index) => (\r\n              <button \r\n                key={index} \r\n                onClick={() => handleCategoryClick(category)} \r\n                className=\"category-button\"\r\n              >\r\n                {category.category}\r\n              </button>\r\n            ))}\r\n          </section>\r\n\r\n          {filteredJobs.length > 0 && (\r\n            <section className=\"job-list\">\r\n              {filteredJobs.map((job) => (\r\n                <JobItem key={job.id} job={job} onViewDetails={() => handleViewDetails(job)} />\r\n              ))}\r\n            </section>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst JobDetails = ({ job, onBack, jobInfo, onInputChange, onChange, onSubmit, opcionesExperiencia, coverLetter }) => (\r\n  <div className=\"job-details\">\r\n    <button onClick={onBack}>Volver</button>\r\n    <h2>{job.title}</h2>\r\n    <p>{job.location}</p>\r\n    <p>{job.description}</p>\r\n\r\n    <section className=\"search-section\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"nombre\"\r\n        placeholder=\"Nombre\"\r\n        className=\"input-field\"\r\n        value={jobInfo.nombre}\r\n        onChange={onChange}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"telefono\"\r\n        placeholder=\"Teléfono\"\r\n        className=\"input-field\"\r\n        value={jobInfo.telefono}\r\n        onChange={onChange}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"correo\"\r\n        placeholder=\"Correo Electrónico\"\r\n        className=\"input-field\"\r\n        value={jobInfo.correo}\r\n        onChange={onChange}\r\n      />\r\n\r\n      {jobInfo.habilidades.map((skill, index) => (\r\n        <input\r\n          key={index}\r\n          type=\"text\"\r\n          placeholder={`Habilidad ${index + 1}`}\r\n          className=\"input-field\"\r\n          value={skill}\r\n          onChange={(e) => onInputChange(index, e.target.value)}\r\n        />\r\n      ))}\r\n\r\n      <select\r\n        name=\"experiencia\"\r\n        className=\"input-field\"\r\n        value={jobInfo.experiencia}\r\n        onChange={onChange}\r\n      >\r\n        <option value=\"\">Selecciona la experiencia</option>\r\n        {opcionesExperiencia.map(opt => (\r\n          <option key={opt.value} value={opt.value}>{opt.label}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"intereses\"\r\n        placeholder=\"Intereses\"\r\n        className=\"input-field\"\r\n        value={jobInfo.intereses}\r\n        onChange={onChange}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"porque\"\r\n        placeholder=\"¿Por qué quieres trabajar con nosotros?\"\r\n        className=\"input-field\"\r\n        value={jobInfo.porque}\r\n        onChange={onChange}\r\n      />\r\n\r\n      <button className=\"search-button\" onClick={onSubmit}>Generar Carta de Presentación</button>\r\n    </section>\r\n\r\n    {coverLetter && (\r\n      <section className=\"cover-letter\">\r\n        <h3>Carta de Presentación Generada:</h3>\r\n        <p>{coverLetter}</p>\r\n      </section>\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar\">\r\n    <div className=\"navbar-brand\">GPTJOB</div>\r\n  </nav>\r\n);\r\n\r\nconst JobItem = ({ job, onViewDetails }) => (\r\n  <div className=\"job-item\">\r\n    <h2>{job.title}</h2>\r\n    <p>{job.location}</p>\r\n    <button onClick={onViewDetails}>Abrir Detalles</button>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}