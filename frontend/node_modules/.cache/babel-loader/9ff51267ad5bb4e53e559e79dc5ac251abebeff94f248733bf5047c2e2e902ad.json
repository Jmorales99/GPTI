{"ast":null,"code":"var _jsxFileName = \"C:\\\\Universidad\\\\2024-2\\\\GPTI\\\\REPO CON API\\\\GPTI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport AdBanner from './AdBanner';\nimport JobDetails from './components/JobDetails';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [filteredJobs, setFilteredJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [coverLetter, setCoverLetter] = useState('');\n  const [jobInfo, setJobInfo] = useState({\n    nombre: '',\n    telefono: '',\n    correo: '',\n    habilidades: ['', '', '', '', ''],\n    experiencia: '',\n    intereses: '',\n    porque: '',\n    oferta: ''\n  });\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    totalPages: 1,\n    pageSize: 5,\n    totalJobs: 0\n  });\n  const opcionesExperiencia = [{\n    value: '0',\n    label: 'Sin experiencia'\n  }, {\n    value: '1',\n    label: '1 año'\n  }, {\n    value: '2',\n    label: '2 años'\n  }, {\n    value: '3',\n    label: '3 años'\n  }, {\n    value: '4',\n    label: 'Más de 3 años'\n  }];\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/categories');\n        if (!response.ok) throw new Error('Error al obtener categorías desde el servidor');\n        const categoriesData = await response.json();\n        setCategories(categoriesData.map(category => ({\n          category,\n          jobs: []\n        })));\n      } catch (error) {\n        console.error(\"Error al obtener categorías:\", error);\n      }\n    };\n    fetchCategories();\n  }, []);\n  const fetchJobs = async (page = 1) => {\n    try {\n      const response = await fetch(`http://localhost:3000/jobs?page=${page}`);\n      if (!response.ok) throw new Error('Error al obtener trabajos desde el servidor');\n      const data = await response.json();\n      setFilteredJobs(data.jobs);\n      setPagination(data.pagination);\n    } catch (error) {\n      console.error(\"Error al obtener trabajos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchJobs(pagination.currentPage);\n  }, [pagination.currentPage]);\n  const handleCategoryClick = category => {\n    setSelectedCategory(category);\n    setPagination({\n      ...pagination,\n      currentPage: 1\n    });\n    fetchJobs(1);\n  };\n  const handleViewDetails = job => {\n    setSelectedJob(job);\n    setCoverLetter('');\n    setJobInfo({\n      nombre: '',\n      telefono: '',\n      correo: '',\n      habilidades: ['', '', '', '', ''],\n      experiencia: '',\n      intereses: '',\n      porque: ''\n    });\n  };\n  const handleInputChange = (index, value) => {\n    const updatedSkills = [...jobInfo.habilidades];\n    updatedSkills[index] = value;\n    setJobInfo({\n      ...jobInfo,\n      habilidades: updatedSkills\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setJobInfo({\n      ...jobInfo,\n      [name]: value\n    });\n  };\n  const handleSubmit = async () => {\n    // Información del usuario que va a acompañar la oferta\n    const userData = {\n      nombre: jobInfo.nombre,\n      // Nombre del usuario\n      telefono: jobInfo.telefono,\n      // Teléfono del usuario\n      correo: jobInfo.correo,\n      // Correo del usuario\n      habilidades: jobInfo.habilidades,\n      // Habilidades del usuario\n      experiencia: jobInfo.experiencia,\n      // Experiencia del usuario\n      intereses: jobInfo.intereses,\n      // Intereses del usuario\n      porque: jobInfo.porque,\n      // Motivación del usuario para el puesto\n      oferta: selectedJob.description // Descripción del trabajo que viene del trabajo seleccionado\n    };\n    console.log(userData);\n    try {\n      const response = await fetch('http://localhost:3001/recomendaciones', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData) // Enviar los datos del usuario junto con la oferta de trabajo\n      });\n      if (!response.ok) throw new Error('Error en la respuesta del servidor');\n      const data = await response.json();\n      setCoverLetter(data.carta || 'No se generó una carta de presentación');\n    } catch (error) {\n      console.error(\"Error al enviar datos al backend:\", error);\n    }\n  };\n\n  // const handleSubmit = async () => {\n  //   try {\n  //     const response = await fetch('http://localhost:3001/recomendaciones', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(jobInfo),\n  //     });\n\n  //     if (!response.ok) throw new Error('Error en la respuesta del servidor');\n\n  //     const data = await response.json();\n  //     setCoverLetter(data.carta || 'No se generó una carta de presentación');\n  //   } catch (error) {\n  //     console.error(\"Error al enviar datos al backend:\", error);\n  //   }\n  // };\n\n  const handleNextPage = () => {\n    if (pagination.currentPage < pagination.totalPages) {\n      setPagination(prev => ({\n        ...prev,\n        currentPage: prev.currentPage + 1\n      }));\n    }\n  };\n  const handlePrevPage = () => {\n    if (pagination.currentPage > 1) {\n      setPagination(prev => ({\n        ...prev,\n        currentPage: prev.currentPage - 1\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), selectedJob ? /*#__PURE__*/_jsxDEV(JobDetails, {\n      job: selectedJob,\n      onBack: () => setSelectedJob(null),\n      jobInfo: jobInfo,\n      onInputChange: handleInputChange,\n      onChange: handleChange,\n      onSubmit: handleSubmit,\n      opcionesExperiencia: opcionesExperiencia,\n      coverLetter: coverLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Encuentra tu trabajo ideal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"category-list\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCategoryClick(category),\n          className: \"category-button\",\n          children: category.category\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), filteredJobs.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"job-list\",\n        children: [filteredJobs.map(job => /*#__PURE__*/_jsxDEV(JobItem, {\n          job: job,\n          onViewDetails: () => handleViewDetails(job)\n        }, job.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"job-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pagination-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrevPage,\n              disabled: pagination.currentPage === 1,\n              children: \"Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"P\\xE1gina \", pagination.currentPage, \" de \", pagination.totalPages]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextPage,\n              disabled: pagination.currentPage === pagination.totalPages,\n              children: \"Siguiente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oZubfkWlgi/Dtz0qcnFO74NoIwY=\");\n_c = App;\nconst Navbar = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"navbar\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar-brand\",\n    children: \"GPTJOB\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 232,\n  columnNumber: 3\n}, this);\n_c2 = Navbar;\nconst Footer = () => /*#__PURE__*/_jsxDEV(\"nav\", {\n  className: \"footer\",\n  children: [/*#__PURE__*/_jsxDEV(AdBanner, {\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(AdBanner, {\n    position: \"bottom\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 237,\n  columnNumber: 3\n}, this);\n_c3 = Footer;\nconst JobItem = ({\n  job,\n  onViewDetails\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"job-item\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: job.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: job.city\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onViewDetails,\n    children: \"Abrir Detalles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 245,\n  columnNumber: 3\n}, this);\n_c4 = JobItem;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Navbar\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"JobItem\");","map":{"version":3,"names":["React","useState","useEffect","AdBanner","JobDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","categories","setCategories","selectedCategory","setSelectedCategory","filteredJobs","setFilteredJobs","selectedJob","setSelectedJob","coverLetter","setCoverLetter","jobInfo","setJobInfo","nombre","telefono","correo","habilidades","experiencia","intereses","porque","oferta","pagination","setPagination","currentPage","totalPages","pageSize","totalJobs","opcionesExperiencia","value","label","fetchCategories","response","fetch","ok","Error","categoriesData","json","map","category","jobs","error","console","fetchJobs","page","data","handleCategoryClick","handleViewDetails","job","handleInputChange","index","updatedSkills","handleChange","e","name","target","handleSubmit","userData","description","log","method","headers","body","JSON","stringify","carta","handleNextPage","prev","handlePrevPage","className","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","onBack","onInputChange","onChange","onSubmit","onClick","length","JobItem","onViewDetails","id","disabled","Footer","_c","_c2","position","_c3","title","city","_c4","$RefreshReg$"],"sources":["C:/Universidad/2024-2/GPTI/REPO CON API/GPTI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport AdBanner from './AdBanner';\r\nimport JobDetails from './components/JobDetails';\r\nfunction App() {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [filteredJobs, setFilteredJobs] = useState([]);\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [coverLetter, setCoverLetter] = useState('');\r\n  const [jobInfo, setJobInfo] = useState({\r\n    nombre: '',\r\n    telefono: '',\r\n    correo: '',\r\n    habilidades: ['', '', '', '', ''],\r\n    experiencia: '',\r\n    intereses: '',\r\n    porque: '',\r\n    oferta: '',\r\n  });\r\n\r\n  const [pagination, setPagination] = useState({\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    pageSize: 5,\r\n    totalJobs: 0,\r\n  });\r\n\r\n  const opcionesExperiencia = [\r\n    { value: '0', label: 'Sin experiencia' },\r\n    { value: '1', label: '1 año' },\r\n    { value: '2', label: '2 años' },\r\n    { value: '3', label: '3 años' },\r\n    { value: '4', label: 'Más de 3 años' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/categories');\r\n        if (!response.ok) throw new Error('Error al obtener categorías desde el servidor');\r\n        \r\n        const categoriesData = await response.json();\r\n        setCategories(categoriesData.map(category => ({ category, jobs: [] })));\r\n      } catch (error) {\r\n        console.error(\"Error al obtener categorías:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchJobs = async (page = 1) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/jobs?page=${page}`);\r\n      if (!response.ok) throw new Error('Error al obtener trabajos desde el servidor');\r\n      \r\n      const data = await response.json();\r\n      setFilteredJobs(data.jobs); \r\n      setPagination(data.pagination);  \r\n    } catch (error) {\r\n      console.error(\"Error al obtener trabajos:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs(pagination.currentPage);\r\n  }, [pagination.currentPage]);\r\n\r\n  const handleCategoryClick = (category) => {\r\n    setSelectedCategory(category);\r\n    setPagination({ ...pagination, currentPage: 1 });\r\n    fetchJobs(1); \r\n  };\r\n\r\n  const handleViewDetails = (job) => {\r\n    setSelectedJob(job);\r\n    setCoverLetter('');\r\n    setJobInfo({\r\n      nombre: '',\r\n      telefono: '',\r\n      correo: '',\r\n      habilidades: ['', '', '', '', ''],\r\n      experiencia: '',\r\n      intereses: '',\r\n      porque: '',\r\n    });\r\n  };\r\n\r\n  const handleInputChange = (index, value) => {\r\n    const updatedSkills = [...jobInfo.habilidades];\r\n    updatedSkills[index] = value;\r\n    setJobInfo({ ...jobInfo, habilidades: updatedSkills });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setJobInfo({ ...jobInfo, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Información del usuario que va a acompañar la oferta\r\n    const userData = {\r\n      nombre: jobInfo.nombre,        // Nombre del usuario\r\n      telefono: jobInfo.telefono,    // Teléfono del usuario\r\n      correo: jobInfo.correo,        // Correo del usuario\r\n      habilidades: jobInfo.habilidades,  // Habilidades del usuario\r\n      experiencia: jobInfo.experiencia, // Experiencia del usuario\r\n      intereses: jobInfo.intereses,   // Intereses del usuario\r\n      porque: jobInfo.porque,         // Motivación del usuario para el puesto\r\n      oferta: selectedJob.description,        // Descripción del trabajo que viene del trabajo seleccionado\r\n    };\r\n    console.log(userData);\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:3001/recomendaciones', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userData), // Enviar los datos del usuario junto con la oferta de trabajo\r\n      });\r\n  \r\n      if (!response.ok) throw new Error('Error en la respuesta del servidor');\r\n  \r\n      const data = await response.json();\r\n      setCoverLetter(data.carta || 'No se generó una carta de presentación');\r\n    } catch (error) {\r\n      console.error(\"Error al enviar datos al backend:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  // const handleSubmit = async () => {\r\n  //   try {\r\n  //     const response = await fetch('http://localhost:3001/recomendaciones', {\r\n  //       method: 'POST',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json',\r\n  //       },\r\n  //       body: JSON.stringify(jobInfo),\r\n  //     });\r\n\r\n  //     if (!response.ok) throw new Error('Error en la respuesta del servidor');\r\n      \r\n  //     const data = await response.json();\r\n  //     setCoverLetter(data.carta || 'No se generó una carta de presentación');\r\n  //   } catch (error) {\r\n  //     console.error(\"Error al enviar datos al backend:\", error);\r\n  //   }\r\n  // };\r\n\r\n  const handleNextPage = () => {\r\n    if (pagination.currentPage < pagination.totalPages) {\r\n      setPagination((prev) => ({ ...prev, currentPage: prev.currentPage + 1 }));\r\n    }\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (pagination.currentPage > 1) {\r\n      setPagination((prev) => ({ ...prev, currentPage: prev.currentPage - 1 }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Navbar />\r\n\r\n      {selectedJob ? (\r\n        <JobDetails\r\n          job={selectedJob}\r\n          onBack={() => setSelectedJob(null)}\r\n          jobInfo={jobInfo}\r\n          onInputChange={handleInputChange}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          opcionesExperiencia={opcionesExperiencia}\r\n          coverLetter={coverLetter}\r\n        />\r\n      ) : (\r\n        <>\r\n          <header className=\"app-header\">\r\n            <h1>Encuentra tu trabajo ideal</h1>\r\n          </header>\r\n\r\n          <section className=\"category-list\">\r\n            {categories.map((category, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleCategoryClick(category)}\r\n                className=\"category-button\"\r\n              >\r\n                {category.category}\r\n              </button>\r\n            ))}\r\n          </section>\r\n\r\n          {filteredJobs.length > 0 && (\r\n            <section className=\"job-list\">\r\n              {filteredJobs.map((job) => (\r\n                <JobItem key={job.id} job={job} onViewDetails={() => handleViewDetails(job)} />\r\n              ))}\r\n\r\n            <section className=\"job-list\">\r\n            <div className=\"pagination-controls\">\r\n                <button onClick={handlePrevPage} disabled={pagination.currentPage === 1}>\r\n                  Anterior\r\n                </button>\r\n                <span>Página {pagination.currentPage} de {pagination.totalPages}</span>\r\n                <button onClick={handleNextPage} disabled={pagination.currentPage === pagination.totalPages}>\r\n                  Siguiente\r\n                </button>\r\n              </div>\r\n            </section>\r\n            </section>\r\n          )}\r\n        </>\r\n      )}\r\n      <Footer />\r\n      {/* Fila de banners en la parte inferior \r\n      <div className=\"ad-banner-row\">\r\n        <AdBanner position=\"bottom\" />\r\n        <AdBanner position=\"bottom\" />\r\n        <AdBanner position=\"bottom\" />\r\n      </div>\r\n      */}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"navbar\">\r\n    <div className=\"navbar-brand\">GPTJOB</div>\r\n  </nav>\r\n);\r\nconst Footer = () => (\r\n  <nav className=\"footer\">\r\n        <AdBanner position=\"bottom\" />\r\n        <AdBanner position=\"bottom\" />\r\n        {/*<AdBanner position=\"bottom\" />*/}\r\n  </nav>\r\n);\r\n\r\nconst JobItem = ({ job, onViewDetails }) => (\r\n  <div className=\"job-item\">\r\n    <h2>{job.title}</h2>\r\n    <p>{job.city}</p>\r\n    <button onClick={onViewDetails}>Abrir Detalles</button>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}